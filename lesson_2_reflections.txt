What happens when you initialize a repository? Why do you need to do it?
	When you run git init, git creates a repository in the working directory by generating the metadata files, which will allow it to keep trake of the repository state and identify the folder as a container for the repository.

How is the staging area different from the working directory and the repository? What value do you think it offers?
	The staging area is an intermediate state between the state of the working directory and the commit. It allows you to bundle several add actions into a single commit, and also to review them before committing the changes into a commit.

How can you use the staging area to make sure you have one commit per logical change?
	You can diff the staging area with the most recent commit in the repo by using git diff --staged to see the changes between the staging area and the repo. then you can add/remove files to the staging area until the staging area contains a single logical change.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
	If you are trying to make an experimental version of your project and do not want to affect the main build. Or if you're trying to make the application in another language.	
